# 乐享数据库配置
spring.datasource.druid.master.url=jdbc:mysql://rm-uf6o289177ht773wc5m.mysql.rds.aliyuncs.com:3306/lansi_lojoy?useUnicode=true&amp;characterEncoding=utf-8&useSSL=false&generateSimpleParameterMetadata=true
spring.datasource.druid.master.username=mysqlsa
spring.datasource.druid.master.password=Lansi123


# redis 配置
spring.redis.host=r-uf6ndi0ukdlnhs9nhjpd.redis.rds.aliyuncs.com
spring.redis.port=6379
spring.redis.password=Lansi123
#spring.redis.host=139.224.101.231
#spring.redis.port=6379
#spring.redis.password=zml123456
spring.redis.database=87

# 设置文件上传的大小限制
spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=500MB
spring.servlet.multipart.enabled=true
#企业微信配置
spring.work.wexin.corpid=wwd9005cc8b0041493
spring.work.wexin.contacts.corpsecret=PP4_m3LIz9CJsBW9bG6aRjV5nb_3DnDTT54LTwRR4a4

# 乐享屋订阅号配置
spring.wechat.mp.lojoy.app-id=wx6c543d3dce15460e
spring.wechat.mp.lojoy.app-secret=5dc262e1abb7b8853243c6cc55b0ff97
spring.wechat.mp.lojoy.access-token-cache-key=Lojoy:WeChat:App:AccessToken:CacheKey

# 乐享Woo服务号应用
spring.wechat.mp.lojoywoo.app-id=wx539ff5ec862826fc
spring.wechat.mp.lojoywoo.app-secret=6deb201c51eb5bb69179c3bc524ea143
spring.wechat.mp.lojoywoo.access-token-cache-key=LojoyWoo:WeChat:App:AccessToken:CacheKey
spring.wechat.mp.lojoywoo.js-api-ticket-cache-key=LojoyWoo:WeChat:App:JsApiTicket:CacheKey

# 微信小程序配置
spring.micro.wechat.applet.app-id=wx3ac31e305ef72773
spring.micro.wechat.applet.app-secret=7970fa3079dac2868e14592baaed4125
spring.micro.wechat.applet.applet-type=developer
spring.micro.wechat.applet.token=18CA12D457CBC5CF2A1AC27A0C7A537B
spring.micro.wechat.applet.encoding-aes-key=i1TgFO1LmuN9646Ba8EQ9uFqCoSiNY8dJfgMrUZSVa2
spring.micro.wechat.applet.access-token-cache-key=Lojoy_Wechat_Applet_AccessToken_CacheKey

# 配置mybatis-plus日志
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl


# 公司七牛云配置
spring.micro.qiniu.app-key=PPi8GMBRuyeVWvmH0zTsM7WDrBz97qWeo9puAHld
spring.micro.qiniu.app-secret=H5gQn4RPKS6c87uw6CIoVXsTm-NJF_Q2DGtg1Ef9
spring.micro.qiniu.region=huaDong
spring.micro.qiniu.public-bucket.host=https://qiniutest.realtynavi.com
spring.micro.qiniu.public-bucket.bucket=test1
spring.micro.qiniu.private-bucket.host=https://qiniuprivatetest.realtynavi.com
spring.micro.qiniu.private-bucket.bucket=lansi-private-test

##################Druid链接池配置##################
# 数据库链接池
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#########分单数据库#########
# 应用获取数据库连接前，设置Session 字符集 "SET NAMES utf8mb4"
spring.datasource.druid.business.assign.order.connection-init-sqls=set names utf8mb4;
# 连接池建立时创建的初始化连接数
spring.datasource.druid.business.assign.order.initial-size=5
# 连接池中最小的活跃连接数
spring.datasource.druid.business.assign.order.min-idle=5
# 连接池中最大的活跃连接数
spring.datasource.druid.business.assign.order.max-active=20
# 配置获取连接等待超时的时间
spring.datasource.druid.business.assign.order.max-wait=30000
# 配置链接在链接池中的最小生成时间
spring.datasource.druid.business.assign.order.min-evictable-idle-time-millis=300000
# 配置检测可以关闭的空闲链接间隔时间
spring.datasource.druid.business.assign.order.time-between-eviction-runs-millis=60000
# 验证连通性SQL
spring.datasource.druid.business.assign.order.validation-query=SELECT 1 FROM DUAL
# 验证连通性查询请求超时时间
spring.datasource.druid.business.assign.order.validation-query-timeout=30000
# 是否在获得连接后检测其可用性
spring.datasource.druid.business.assign.order.test-on-borrow=false
# 是否在连接放回连接池后检测其可用性
spring.datasource.druid.business.assign.order.test-on-return=false
# 是否在连接空闲一段时间后检测其可用性
spring.datasource.druid.business.assign.order.test-while-idle=true
# 数据库驱动类
spring.datasource.druid.business.assign.order.driver-class-name=com.mysql.cj.jdbc.Driver

#spring.datasource.druid.business.assign.order.url=jdbc:mysql://10.20.3.209:3306/mybatis_plus
#spring.datasource.druid.business.assign.order.username=root
#spring.datasource.druid.business.assign.order.password=123456

datasync.cron=0 * 11 * * ?





